// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/gestores.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServer {
  public static partial class Gestor
  {
    static readonly string __ServiceName = "Gestor";

    static readonly grpc::Marshaller<global::GrpcServer.GestorIdentidade> __Marshaller_GestorIdentidade = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.GestorIdentidade.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.GestorMensagem> __Marshaller_GestorMensagem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.GestorMensagem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.RegistarChave> __Marshaller_RegistarChave = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.RegistarChave.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServer.RespostaVencedores> __Marshaller_RespostaVencedores = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServer.RespostaVencedores.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcServer.GestorIdentidade, global::GrpcServer.GestorMensagem> __Method_VerificaEntradaGestor = new grpc::Method<global::GrpcServer.GestorIdentidade, global::GrpcServer.GestorMensagem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerificaEntradaGestor",
        __Marshaller_GestorIdentidade,
        __Marshaller_GestorMensagem);

    static readonly grpc::Method<global::GrpcServer.RegistarChave, global::GrpcServer.RespostaVencedores> __Method_RegistarChavesVencedora = new grpc::Method<global::GrpcServer.RegistarChave, global::GrpcServer.RespostaVencedores>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "RegistarChavesVencedora",
        __Marshaller_RegistarChave,
        __Marshaller_RespostaVencedores);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServer.GestoresReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Gestor</summary>
    [grpc::BindServiceMethod(typeof(Gestor), "BindService")]
    public abstract partial class GestorBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcServer.GestorMensagem> VerificaEntradaGestor(global::GrpcServer.GestorIdentidade request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task RegistarChavesVencedora(global::GrpcServer.RegistarChave request, grpc::IServerStreamWriter<global::GrpcServer.RespostaVencedores> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(GestorBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_VerificaEntradaGestor, serviceImpl.VerificaEntradaGestor)
          .AddMethod(__Method_RegistarChavesVencedora, serviceImpl.RegistarChavesVencedora).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, GestorBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_VerificaEntradaGestor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServer.GestorIdentidade, global::GrpcServer.GestorMensagem>(serviceImpl.VerificaEntradaGestor));
      serviceBinder.AddMethod(__Method_RegistarChavesVencedora, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::GrpcServer.RegistarChave, global::GrpcServer.RespostaVencedores>(serviceImpl.RegistarChavesVencedora));
    }

  }
}
#endregion
